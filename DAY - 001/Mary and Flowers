PROBLEM STATEMENT:-

One day, Mary wanted to give a present to her friend. She decided on a beautiful bouquet of flowers and began collecting them. She needed precisely 2 types of flowers, and the total number of flowers required was 't'. To gather these, she started picking from her garden, which contained 'N' types of flowers. Each type was arranged in a queue in non-decreasing order, such as 1, 3, 6, 15, and so forth.
Now, she seeks your help in determining the indexes of the flowers she should collect.
Note: For every case, there will always be a pair of flowers whose sum equals 't'. If multiple pairs exist, select the first occurrence.

Input Format
The first line contains integers N and t where, N is the total types of flowers and t is the total number of flowers needed.
The second line contains n integers a1,a2,…,an — elements of the a array.

Output Format
Print the indexes of the two flowers that sum up to 't'. The first index should be smaller than the second index. Both indexes should be zero-based.

Constraints
2 <= N <= 10^4
1 <= a[i] <= 10^3
2 <= t <= 2*10^3

Sample Testcase 0
Testcase Input
5 2
1 1 2 3 4
Testcase Output
0 1
Explanation
Flowers at 0th and 1st indexes sum up to the target only i.e. 1 + 1 = 2.

Sample Testcase 1
Testcase Input
7 5
1 2 2 4 5 7 10
Testcase Output
0 3
Explanation
Flowers at 0th and 3rd indexes sum up to the target only i.e. 1 + 4 = 5 .*

OUTPUT:-

def find_flower_indices(n, t, arr):
    """Write your logic here.
    
    Parameters:
    n (int): Total types of flowers
    t (int): Total number of flowers needed
    arr (list): List of integers representing types of flowers
    
    Returns:
    tuple: A tuple with two integers representing the indices of the two flowers
    """
    left, right = 0, n - 1
    while left < right:
        current_sum = arr[left] + arr[right]
        if current_sum == t:
            return (left, right)
        elif current_sum < t:
            left += 1
        else:
            right -= 1

def main():
    import sys
    input = sys.stdin.read()
    data = input().strip().split()
    n = int(data[0])  # First input is the integer n
    t = int(data[1])  # Second input is the integer t
    arr = list(map(int, data[2:]))  # Remaining input is the array of integers
    
    # Call user logic function and get the result
    result = find_flower_indices(n, t, arr)
    
    # Print the output in the required format
    print(result[0], result[1])

if __name__ == "__main__":
    main()


EXPLAINATION:-

1. The find_flower_indices function uses a two-pointer technique to find the pair of flowers that sum up to t.
2. The function initializes two pointers, left and right, to the start and end of the arr list, respectively.
3. The function then enters a loop where it calculates the sum of the flowers at the current left and right indices.
4. If the sum is equal to t, the function returns a tuple containing the left and right indices.
5. If the sum is less than t, the function increments left to increase the sum.
6. If the sum is greater than t, the function decrements right to decrease the sum.
7. The main function reads the input data, calls the find_flower_indices function, and prints the result.
